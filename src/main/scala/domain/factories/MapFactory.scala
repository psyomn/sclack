package sclack.domain.factories

import javax.swing.ImageIcon

import sclack.domain.Map
import sclack.domain.NonPlayableCharacter
import sclack.domain.Entity

import sclack.tech.TileManager

/** 
 * Factory for creating various maps that we may or may not use 
 *
 * @author Simon Symeonidis 
 */
object MapFactory { 
  
  /** Create a map with no portals */
  def createSingleMap : sclack.domain.Map = {
    var map : sclack.domain.Map = new sclack.domain.Map() 

    map.data = Array[Array[Int]](
      Array(140, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 
            131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 117, 117, 117, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 116, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(140, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
            120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 140),
      Array(131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
            131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131))
    
    var npcs = createGenericNPCs

    map.entities = Array[(Int, Int, NonPlayableCharacter)](
      (160         , 160, npcs(0)), 
      (160 + 1 * 16, 160, npcs(1)),
      (160 + 2 * 16, 160, npcs(2)),
      (160 + 3 * 16, 160, npcs(3)),
      (160 + 4 * 16, 160, npcs(4)))

    map
  }

  def createGenericNPCs : Array[NonPlayableCharacter] = {
    Array[String](
      "Oh, why hello there!", 
      "Don't mind us, we're just some random NPCs for testing",
      "Hopefully we'll be included in the real game one day!", 
      "Actually it would be nice to see this thing be finished at some point",
      "Hi, my name is Harry and I'M GOING TO KILL YOU"
    ).map(new NonPlayableCharacter(_,TileManager.tile("fan",110)))
  }
}

